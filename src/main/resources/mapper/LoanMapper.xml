<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.microcredit.dao.LoanMapper">
  <resultMap id="BaseResultMap" type="com.aaa.microcredit.entity.Loan">
    <id column="l_id" jdbcType="INTEGER" property="lId" />
    <result column="Apply_Id" jdbcType="INTEGER" property="applyId" />
    <result column="cp_id" jdbcType="INTEGER" property="cpId" />
    <result column="loan_type" jdbcType="INTEGER" property="loanType" />
    <result column="r_type" jdbcType="INTEGER" property="rType" />
    <result column="Repayment_id" jdbcType="INTEGER" property="repaymentId" />
    <result column="loan_money" jdbcType="DECIMAL" property="loanMoney" />
    <result column="r_money" jdbcType="DECIMAL" property="rMoney" />
    <result column="z_periobs" jdbcType="INTEGER" property="zPeriobs" />
    <result column="r_capital" jdbcType="DECIMAL" property="rCapital" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="loan_time" jdbcType="TIMESTAMP" property="loanTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    l_id, Apply_Id, cp_id, loan_type, r_type, Repayment_id, loan_money, r_money, z_periobs, 
    r_capital, apply_time, loan_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loan
    where l_id = #{lId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from loan
    where l_id = #{lId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aaa.microcredit.entity.Loan">
    insert into loan (l_id, Apply_Id, cp_id, 
      loan_type, r_type, Repayment_id, 
      loan_money, r_money, z_periobs, 
      r_capital, apply_time, loan_time, 
      status)
    values (#{lId,jdbcType=INTEGER}, #{applyId,jdbcType=INTEGER}, #{cpId,jdbcType=INTEGER}, 
      #{loanType,jdbcType=INTEGER}, #{rType,jdbcType=INTEGER}, #{repaymentId,jdbcType=INTEGER}, 
      #{loanMoney,jdbcType=DECIMAL}, #{rMoney,jdbcType=DECIMAL}, #{zPeriobs,jdbcType=INTEGER}, 
      #{rCapital,jdbcType=DECIMAL}, #{applyTime,jdbcType=TIMESTAMP}, #{loanTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aaa.microcredit.entity.Loan">
    insert into loan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        l_id,
      </if>
      <if test="applyId != null">
        Apply_Id,
      </if>
      <if test="cpId != null">
        cp_id,
      </if>
      <if test="loanType != null">
        loan_type,
      </if>
      <if test="rType != null">
        r_type,
      </if>
      <if test="repaymentId != null">
        Repayment_id,
      </if>
      <if test="loanMoney != null">
        loan_money,
      </if>
      <if test="rMoney != null">
        r_money,
      </if>
      <if test="zPeriobs != null">
        z_periobs,
      </if>
      <if test="rCapital != null">
        r_capital,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="loanTime != null">
        loan_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        #{lId,jdbcType=INTEGER},
      </if>
      <if test="applyId != null">
        #{applyId,jdbcType=INTEGER},
      </if>
      <if test="cpId != null">
        #{cpId,jdbcType=INTEGER},
      </if>
      <if test="loanType != null">
        #{loanType,jdbcType=INTEGER},
      </if>
      <if test="rType != null">
        #{rType,jdbcType=INTEGER},
      </if>
      <if test="repaymentId != null">
        #{repaymentId,jdbcType=INTEGER},
      </if>
      <if test="loanMoney != null">
        #{loanMoney,jdbcType=DECIMAL},
      </if>
      <if test="rMoney != null">
        #{rMoney,jdbcType=DECIMAL},
      </if>
      <if test="zPeriobs != null">
        #{zPeriobs,jdbcType=INTEGER},
      </if>
      <if test="rCapital != null">
        #{rCapital,jdbcType=DECIMAL},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loanTime != null">
        #{loanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aaa.microcredit.entity.Loan">
    update loan
    <set>
      <if test="applyId != null">
        Apply_Id = #{applyId,jdbcType=INTEGER},
      </if>
      <if test="cpId != null">
        cp_id = #{cpId,jdbcType=INTEGER},
      </if>
      <if test="loanType != null">
        loan_type = #{loanType,jdbcType=INTEGER},
      </if>
      <if test="rType != null">
        r_type = #{rType,jdbcType=INTEGER},
      </if>
      <if test="repaymentId != null">
        Repayment_id = #{repaymentId,jdbcType=INTEGER},
      </if>
      <if test="loanMoney != null">
        loan_money = #{loanMoney,jdbcType=DECIMAL},
      </if>
      <if test="rMoney != null">
        r_money = #{rMoney,jdbcType=DECIMAL},
      </if>
      <if test="zPeriobs != null">
        z_periobs = #{zPeriobs,jdbcType=INTEGER},
      </if>
      <if test="rCapital != null">
        r_capital = #{rCapital,jdbcType=DECIMAL},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loanTime != null">
        loan_time = #{loanTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aaa.microcredit.entity.Loan">
    update loan
    set Apply_Id = #{applyId,jdbcType=INTEGER},
      cp_id = #{cpId,jdbcType=INTEGER},
      loan_type = #{loanType,jdbcType=INTEGER},
      r_type = #{rType,jdbcType=INTEGER},
      Repayment_id = #{repaymentId,jdbcType=INTEGER},
      loan_money = #{loanMoney,jdbcType=DECIMAL},
      r_money = #{rMoney,jdbcType=DECIMAL},
      z_periobs = #{zPeriobs,jdbcType=INTEGER},
      r_capital = #{rCapital,jdbcType=DECIMAL},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      loan_time = #{loanTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <!--查询贷款表信息-->
  <select id="selectAll" resultType="Map">
    select l_id lId, l.loan_money loanMoney,r_money rMoney ,z_periobs zPeriobs,r_capital rCapital ,date_format(apply_time,'%Y-%m-%d %H:%i:%s') applyTime,date_format(Loan_time,'%Y-%m-%d %H:%i:%s') loanTime,d3.dictionary_name status,
    d.dictionary_name loanType,cp.cp_name cpName,d1.dictionary_name rType,d2.dictionary_name repaymentId
    from loan l,cp_info cp, dictionary d , dictionary d1, dictionary d2 , dictionary d3
    where (l.loan_type=d.dictionary_value and d.keyword='loan_type')
    and (l.r_type=d1.dictionary_value and d1.keyword='repayment_type')
    and (l.Repayment_id=d2.dictionary_value and d2.keyword='Repayment')
    and (l.status=d3.dictionary_value and d3.keyword='loan_status')
    and cp.cp_id=l.cp_id
    -- 根据公司名称查询
    <if test="cpName!=null and cpName!=''">
      and cp.cp_name like  concat('%',#{cpName},'%')
    </if>
    --   贷款类型 房贷 抵押
    <if test="loanType!=null and loanType!=''">
      and l.loan_type=#{loanType}
    </if>
    --     还款类型 等额本金  等额本息
    <if test="rType!=null and rType!=''">
      and l.r_type=#{rType}
    </if>
    <if test="RepaymentId!=null and RepaymentId!=''">
      and l.Repayment_id=#{RepaymentId}
    </if>
    <if test="status!=null and status!=''">
      and l.status=#{status}
    </if> limit ${start},${pageSize}

  </select>

  <select id="selectAllCount" resultType="Integer">
    select count(*)
    from loan l,cp_info cp, dictionary d , dictionary d1, dictionary d2 , dictionary d3
    where (l.loan_type=d.dictionary_value and d.keyword='loan_type')
    and (l.r_type=d1.dictionary_value and d1.keyword='repayment_type')
    and (l.Repayment_id=d2.dictionary_value and d2.keyword='Repayment')
    and (l.status=d3.dictionary_value and d3.keyword='loan_status')
    and cp.cp_id=l.cp_id
    -- 根据公司名称查询
    <if test="cpName!=null and cpName!=''">
      and cp.cp_name like concat('%',#{cpName},'%')
    </if>
    --   贷款类型 房贷 抵押
    <if test="loanType!=null and loanType!=''">
      and l.loan_type=#{loanType}
    </if>
    --     还款类型 等额本金  等额本息
    <if test="rType!=null and rType!=''">
      and l.r_type=#{rType}
    </if>
    <if test="RepaymentId!=null and RepaymentId!=''">
      and l.Repayment_id=#{RepaymentId}
    </if>
    <if test="status!=null and status!=''">
      and l.status=#{status}
    </if>
  </select>
  <!--查询明细表中的信息 用于拼接-->
  <select id="selectMxAll" resultType="map">
SELECT lm.l_id lId, be_periods bePeriods,lm.r_money rMoney,d.dictionary_name ifOverdue, o_accrual oAccrual,be_accrual beAccrual,date_format(r_time,'%Y-%m-%d %H:%i:%s') rTime,d1.dictionary_name status
FROM loan_mx lm,dictionary d,dictionary d1
where( lm.ifoverdue=d.dictionary_value and d.keyword='ifoverdue')
and( lm.r_status=d1.dictionary_value and d1.keyword='loan_status')
  </select>
</mapper>